[build-system]
requires = ["setuptools>=61.0", "wheel", "pybind11"]
build-backend = "setuptools.build_meta"

[project]
name = "py-chiaki-ng"
version = "0.1.0"
description = "Python bindings for chiaki-ng PlayStation Remote Play with computer vision and automation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "RaceCrewAI", email = "contact@racecrew.ai"}
]
maintainers = [
    {name = "RaceCrewAI", email = "contact@racecrew.ai"}
]
keywords = ["playstation", "remote-play", "automation", "computer-vision", "gaming"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
requires-python = ">=3.8"
dependencies = [
    "pybind11>=2.10.0",
    "opencv-python>=4.8.0",
    "numpy>=1.21.0",
    "aiohttp>=3.8.0",
    "asyncio-throttle>=1.0.0",
    "loguru>=0.7.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "isort>=5.12.0",
]
gui = [
    "PySide6>=6.5.0",
]

[project.urls]
"Homepage" = "https://github.com/RaceCrewAI/py-chiaki-ng"
"Bug Reports" = "https://github.com/RaceCrewAI/py-chiaki-ng/issues"
"Source" = "https://github.com/RaceCrewAI/py-chiaki-ng"
"Documentation" = "https://py-chiaki-ng.readthedocs.io/"

[project.scripts]
py-chiaki-ng-demo = "py_chiaki_ng.examples.demo:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["py_chiaki_ng*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | external
  | chiaki-ng
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["py_chiaki_ng"]

[tool.flake8]
max-line-length = 88
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "external",
    "chiaki-ng"
]
ignore = [
    "E203",  # Whitespace before ':'
    "W503",  # Line break before binary operator
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "numpy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
